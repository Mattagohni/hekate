<?php
/**
 * Created by solutionDrive GmbH
 *
 * @author    Matthias Alt <alt@solutiondrive.de>
 * @date      07.06.17
 * @time:     22:40
 * @copyright 2017 solutionDrive GmbH
 */

namespace sd\hekate\commands;


use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Helper\QuestionHelper;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;

class BitBucketHookCommand extends AbstractBitbucketCommand
{
    protected function configure()
    {
        $this
            ->setName('bitbucket:hook')
            ->setDescription('Get And Set Hooks for specific repositories')
            ->setHelp('Command to get and set hooks on repositories')
            ->addOption('username', 'u', InputArgument::OPTIONAL, 'The username of the bitbucket-User')
            ->addOption('password', 'p', InputArgument::OPTIONAL, 'The password of the bitbucket-User')
            ->addOption('account', 'a', InputArgument::OPTIONAL, 'account from which private repositories will be fetched')
            ->addArgument('mode', InputArgument::REQUIRED, 'In which mode to run the command. get / set')
            ->addArgument('repo', InputArgument::REQUIRED, 'Repository to interact with')
            ->addArgument('hook', InputArgument::OPTIONAL, 'The webhook to set')
        ;
    }

    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $pathToConfig = $input->getOption('config');
        $this->_initConfig($pathToConfig);

        /** @var QuestionHelper $helper */
        $helper = $this->getHelper('question');

        $this->username   = $this->_getUserName($input, $output, $helper);
        $this->password   = $this->_getPassword($input, $output, $helper);
        $this->account    = $this->_getAccount($input, $output, $helper);

        parent::execute($input, $output); // TODO: Change the autogenerated stub
    }


}